require('dotenv').config();
const { Telegraf } = require('telegraf');
const Markup = require('telegraf/markup');

const bot = new Telegraf(process.env.token);

bot.start((ctx) =>
  ctx.reply(
    '–ò–∑–≤–µ—Å—Ç–Ω—ã–π —Å–æ–º–Ω–æ–ª–æ–≥ –ú–∞–π–∫–ª –ë—Ä–µ—É—Å –≤—ã–¥–µ–ª—è–µ—Ç —á–µ—Ç—ã—Ä–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ö—Ä–æ–Ω–æ—Ç–∏–ø–∞: –î–µ–ª—å—Ñ–∏–Ω, –õ–µ–≤, –ú–µ–¥–≤–µ–¥—å –∏ –í–æ–ª–∫. –° –ø–æ–º–æ—â—å—é –Ω–µ—Å–ª–æ–∂–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –±—ã—Å—Ç—Ä–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫—Ç–æ –≤—ã, –∏ —É–∑–Ω–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–º—É –ª–∏—á–Ω–æ –≤–∞–º —Ä–∞—Å–ø–æ—Ä—è–¥–∫—É –¥–Ω—è: –∫–æ–≥–¥–∞ –ª—É—á—à–µ –≤—Å—Ç–∞–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –ª–æ–∂–∏—Ç—å—Å—è —Å–ø–∞—Ç—å, –∫–æ–≥–¥–∞ –∑–∞–≤—Ç—Ä–∞–∫–∞—Ç—å-–æ–±–µ–¥–∞—Ç—å-—É–∂–∏–Ω–∞—Ç—å, –∫–æ–≥–¥–∞ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º, –∞ –∫–æ–≥–¥–∞ —É–º—Å—Ç–≤–µ–Ω–Ω—ã–º —Ç—Ä—É–¥–æ–º, –∏ —Ç.–¥. –ú–∞–π–∫–ª –ë—Ä–µ—É—Å —É–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –µ—Å–ª–∏ –≤—ã –±—É–¥–µ—Ç–µ –∂–∏—Ç—å –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–æ —Å–≤–æ–∏–º —Ö—Ä–æ–Ω–æ—Ç–∏–ø–æ–º, —É –≤–∞—Å –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–µ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.',
    Markup.keyboard([['–ù–∞—á–∞—Ç—å!']]).extra()
  )
);

// bot.on('text', async (ctx) => ctx.reply(ctx.message.text));
// bot.on('text', async (ctx) => ctx.reply('üëç'));
bot.on('sticker', (ctx) => ctx.reply('üëç'));
bot.hears('–ù–∞—á–∞—Ç—å!', async (ctx) => {
  q1 = await ctx.reply(
    '–ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è–º–∏, –≤—ã–±–µ—Ä–∏—Ç–µ ¬´–¥–∞¬ª, –µ—Å–ª–∏ –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã, –≤—ã–±–µ—Ä–∏—Ç–µ ¬´–Ω–µ—Ç¬ª',
    // '–Ø –Ω–µ –º–æ–≥—É –∑–∞—Å–Ω—É—Ç—å –∏–ª–∏ –ø—Ä–æ—Å—ã–ø–∞—é—Å—å –æ—Ç –º–∞–ª–µ–π—à–µ–≥–æ –∑–≤—É–∫–∞ –∏–ª–∏ —Å–≤–µ—Ç–∞',
    Markup.keyboard([['–¥–∞'], ['–Ω–µ—Ç']]).extra()
  );
  q2 = await ctx.reply(
    '–ï–¥–∞ ‚Äî –Ω–µ —Å–∞–º–∞—è –±–æ–ª—å—à–∞—è –º–æ—è —Å—Ç—Ä–∞—Å—Ç—å',
    Markup.keyboard([['–¥–∞'], ['–Ω–µ—Ç']]).extra()
  );
  q3 = await ctx.reply('–ï–¥–∞ ', Markup.keyboard([['–¥–∞'], ['–Ω–µ—Ç']]).extra());
});

// function* gen() {
//   let ask1 = yield bot.sendMessage('–í–æ–ø—Ä–æ—Å 1?');
//   bot.on('message', (msg) => {
//     fname = msg.text;
//     generator.next();
//   });
//   let ask2 = yield bot.sendMessage('–í–æ–ø—Ä–æ—Å 2?');
//   bot.on('message', (msg) => {
//     sname = msg.text;
//   });
// }
// let generator = gen();
// bot.sendMessage('–ü—Ä–æ–π–¥–∏ –æ–ø—Ä–æ—Å');
// generator.next();

bot.launch();
